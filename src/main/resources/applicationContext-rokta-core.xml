<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/jee
    	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
    http://www.springframework.org/schema/util
    	http://www.springframework.org/schema/util/spring-util-3.0.xsd
    http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
    	http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd"
  default-autowire="byName">

   <ehcache:annotation-driven cache-manager="ehCacheManager" />
   
   <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>

  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"/>

	<jee:jndi-lookup id="dataSource"
		jndi-name="rokta" resource-ref="true" proxy-interface="javax.sql.DataSource"/>

	<context:annotation-config/>
	<tx:annotation-driven/>
	<!-- 	 
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  	<property name="driverClassName" value="org.postgresql.Driver"/>
  	<property name="username" value="rokta"/>
  	<property name="password" value="r0kt@"/>
  	<property name="url" value="jdbc:postgresql://hurst:5432/rokta-ng"/>
  </bean>  
 	-->
	 
	<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="annotatedClasses">
			<list>
				<value>uk.co.unclealex.rokta.server.model.Person</value>
				<value>uk.co.unclealex.rokta.server.model.Play</value>
				<value>uk.co.unclealex.rokta.server.model.Round</value>
				<value>uk.co.unclealex.rokta.server.model.Game</value>
        <value>uk.co.unclealex.rokta.server.model.Colour</value>
			</list>
		</property>
	</bean>

	<!-- DAOs -->
	
	<bean id="gameDao" class="uk.co.unclealex.rokta.server.dao.HibernateGameDao"/>
	<bean id="colourDao" class="uk.co.unclealex.rokta.server.dao.HibernateColourDao"/>
	<bean id="personDao" class="uk.co.unclealex.rokta.server.dao.HibernatePersonDao"/>
	<bean id="playDao" class="uk.co.unclealex.rokta.server.dao.HibernatePlayDao"/>
	<bean id="roundDao" class="uk.co.unclealex.rokta.server.dao.HibernateRoundDao"/>
	<bean id="gameFilterSupport" class="uk.co.unclealex.rokta.server.dao.GameFilterSupportImpl"/>

	<!-- Services -->
	
	<bean id="leagueService" class="uk.co.unclealex.rokta.server.process.LeagueServiceImpl"/>
	<bean id="dateService" class="uk.co.unclealex.rokta.server.process.DateServiceImpl"/>
	<bean id="importExportManager" class="uk.co.unclealex.rokta.server.process.ImportExportManagerImpl"/>
	<bean id="personService" class="uk.co.unclealex.rokta.server.process.PersonServiceImpl"/>
	<bean id="dateUtil" class="uk.co.unclealex.rokta.server.util.DateUtilImpl"/>
	<bean id="profileManager" class="uk.co.unclealex.rokta.server.process.ProfileManagerImpl"/>
	<bean id="statisticsService" class="uk.co.unclealex.rokta.server.process.StatisticsServiceImpl"/>
	<bean id="newGameService" class="uk.co.unclealex.rokta.server.service.NewGameServiceImpl"/>
	<bean id="informationService" class="uk.co.unclealex.rokta.server.service.InformationServiceImpl"/>
	<bean id="cacheService" class="uk.co.unclealex.rokta.server.service.CacheServiceImpl"/>
		
	<bean id="roktaService" class="uk.co.unclealex.rokta.server.service.RoktaServiceImpl"/>		

	<!-- Security -->
	
	  <bean id="userDatailsService" class="uk.co.unclealex.rokta.server.security.RoktaUserDetailsService"/>
  
	
		<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256"/>
  </bean>
	
	<bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<property name="userPropertyToUse" value="username"/>
	</bean>
	
			
</beans>

